name: build

on:
  push:
  pull_request:

jobs:
  build-addon-posix:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install build dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install cmake ninja-build pkg-config libusb-1.0-0-dev

      - name: Install build dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cmake ninja pkg-config libusb

      - name: Build addon
        run: |
          set -euo pipefail
          npm ci --ignore-scripts
          npm run build:addon
          PREBUILD_DIR=prebuilds/$(node -p '`${process.platform}-${process.arch}`')
          mkdir -p $PREBUILD_DIR
          cp build/Release/hid-input.node $PREBUILD_DIR/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds
          path: prebuilds
          retention-days: 1

  build-addon-docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [linux/arm/v7, linux/arm64]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Install and build for ${{ matrix.platform }}
        uses: kohlerdominik/docker-run-action@v1
        with:
          image: node:lts
          shell: /bin/bash
          workdir: /workspace
          volumes: |
            ${{ github.workspace }}:/workspace
          options: |
            --platform ${{ matrix.platform }}
          run: |
            set -euo pipefail
            apt-get update
            apt-get install -y build-essential cmake ninja-build pkg-config libusb-1.0-0-dev
            npm ci --ignore-scripts
            npm run build:addon
            PREBUILD_DIR=prebuilds/$(node -p '`${process.platform}-${process.arch}`')
            mkdir -p $PREBUILD_DIR
            cp build/Release/hid-input.node $PREBUILD_DIR/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds
          path: prebuilds
          retention-days: 1

  npm-pack:
    needs: [build-addon-posix, build-addon-docker]
    runs-on: ubuntu-latest

    outputs:
      tarball: ${{ steps.build.outputs.tarball }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Download prebuilt artifacts
        uses: actions/download-artifact@v3
        with:
          name: prebuilds
          path: prebuilds

      - name: Build NPM package
        id: build
        run: |
          set -euo pipefail
          npm ci --ignore-scripts
          npm run build:ts
          echo "::set-output name=tarball::$(npm pack)"

      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.tarball }}
          path: ${{ steps.build.outputs.tarball }}

  test-posix:
    needs: npm-pack
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: ['10', '12', '14', '16', '18', 'lts/*', 'current']

    steps:
      - name: Use Node.js ${{ matrix.node }} on ${{ matrix.os }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Download tarball
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.npm-pack.outputs.tarball }}

      - name: Install tarball
        run: npm install ${{ needs.npm-pack.outputs.tarball }}

      - name: Test
        run: node -p 'require("hid-input")'

  test-docker:
    needs: npm-pack
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [linux/arm/v7, linux/arm64]
        node: ['10', '12', '14', '16', '18', 'lts', 'latest']

    steps:
      - name: Download tarball
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.npm-pack.outputs.tarball }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Install and build for Node.js ${{ matrix.node }} on ${{ matrix.platform }}
        uses: kohlerdominik/docker-run-action@v1
        with:
          image: node:${{ matrix.node }}
          shell: /bin/bash
          workdir: /workspace
          volumes: |
            ${{ github.workspace }}:/workspace
          options: |
            --platform ${{ matrix.platform }}
          run: |
            set -euo pipefail
            apt-get update
            apt-get install -y libusb-1.0-0
            npm install ${{ needs.npm-pack.outputs.tarball }}
            node -p 'require("hid-input")'

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test-posix, test-docker, npm-pack]
    runs-on: ubuntu-latest

    steps:
      - name: Download tarball
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.npm-pack.outputs.tarball }}

      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org

      - name: Publish
        run: npm publish ${{ needs.npm-pack.outputs.tarball }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
